[
  {
    "id": "1",
    "input": "*l=../grammar/tests/test_import_dir/nested_import1.txt;\nfiles=%*load",
    "expected_output": "{\"*l\":\"../grammar/tests/test_import_dir/nested_import1.txt\",\"files\":\"%*load\"}",
    "tested_features": [
      "load"
    ],
    "minimised_modl": "*l=../grammar/tests/test_import_dir/nested_import1.txt;files=%*load"
  },
  {
    "id": "2",
    "input": "*l=../grammar/tests/1:../grammar/tests/2:../grammar/tests/3:../grammar/tests/1;\nfiles=%*load",
    "expected_output": "{\"*l\":\"../grammar/tests/1:../grammar/tests/2:../grammar/tests/3:../grammar/tests/1\",\"files\":\"%*load\"}",
    "tested_features": [
      "load"
    ],
    "minimised_modl": "*l=../grammar/tests/1:../grammar/tests/2:../grammar/tests/3:../grammar/tests/1;files=%*load"
  },
  {
    "id": "3",
    "input": "*L=\"https://www.modl.uk/tests/message-thread.txt\";\n\nclasses=*class",
    "expected_output": "{\"*L\":\"https://www.modl.uk/tests/message-thread.txt\",\"classes\":\"*class\"}",
    "tested_features": [
      "load"
    ],
    "minimised_modl": "*L=https~://www.modl.uk/tests/message-thread.txt;classes=*class"
  },
  {
    "id": "4",
    "input": "*method(\n *id=cn;\n *name=company_name;\n *transform=replace<-, >.trim<.>.initcap\n);\n\nm=%*method",
    "expected_output": "{\"*method\":{\"*id\":\"cn\",\"*name\":\"company_name\",\"*transform\":\"replace<-, >.trim<.>.initcap\"},\"m\":\"%*method\"}",
    "tested_features": [
      "method"
    ],
    "minimised_modl": "*m(*i=cn;*n=company_name;*transform=replace<-, >.trim<.>.initcap);m=%*method"
  },
  {
    "id": "5",
    "input": "*L=\"https://www.modl.uk/tests/message-thread.txt\";\n*class(\n *id=a;\n *name=alpha;\n *superclass=map;\n v=victor\n);\n*class(\n *id=b;\n *name=bravo;\n *superclass=alpha;\n w=whisky\n);\n*class(\n *id=c;\n *name=charlie;\n *superclass=bravo;\n x=xray\n);\n*class(\n *id=d;\n *name=delta;\n *superclass=charlie;\n y=yankee\n);\nclasses=%*class",
    "expected_output": "{\"*L\":\"https://www.modl.uk/tests/message-thread.txt\",\"*class\":{\"*id\":\"d\",\"*name\":\"delta\",\"*superclass\":\"charlie\",\"y\":\"yankee\"},\"classes\":\"%*class\"}",
    "tested_features": [
      "load",
      "class"
    ],
    "minimised_modl": "*L=https~://www.modl.uk/tests/message-thread.txt;*c(*i=a;*n=alpha;*s=map;v=victor);*c(*i=b;*n=bravo;*s=alpha;w=whisky);*c(*i=c;*n=charlie;*s=bravo;x=xray);*c(*i=d;*n=delta;*s=charlie;y=yankee);classes=%*class"
  },
  {
    "id": "6",
    "input": "*class(\n  *i=test;\n  *a=[\n    [one;two;three]\n  ]\n);\ntest=1:2:3",
    "expected_output": "{\"*class\":{\"*i\":\"test\",\"*a\":[[\"one\",\"two\",\"three\"]]},\"test\":\"1:2:3\"}",
    "tested_features": [
      "class",
      "assign"
    ],
    "minimised_modl": "*c(*i=test;*a[[one;two;three]]);test=1:2:3"
  },
  {
    "id": "7",
    "input": "*class(\n  *i=test;\n  *a=[\n    [one;two;three]\n  ]\n);\n\ntest=1:2:(a=Alpha;b=Bravo;c=Charlie)",
    "expected_output": "{\"*class\":{\"*i\":\"test\",\"*a\":[[\"one\",\"two\",\"three\"]]},\"test\":{\"1:2:\":{\"a\":\"Alpha\",\"b\":\"Bravo\",\"c\":\"Charlie\"}}}",
    "tested_features": [
      "class",
      "assign"
    ],
    "minimised_modl": "*c(*i=test;*a[[one;two;three]]);test=1:2:(a=Alpha;b=Bravo;c=Charlie)"
  },
  {
    "id": "8",
    "input": "*class(\n  *i=test;\n  *a=[\n    [one;two;three]\n  ]\n);\n\ntest=1:2:[a;b;c]",
    "expected_output": "{\"*class\":{\"*i\":\"test\",\"*a\":[[\"one\",\"two\",\"three\"]]},\"test\":{\"1:2:\":[\"a\",\"b\",\"c\"]}}",
    "tested_features": [
      "class",
      "assign"
    ],
    "minimised_modl": "*c(*i=test;*a[[one;two;three]]);test=1:2:[a;b;c]"
  },
  {
    "id": "9",
    "input": "[\none;\ntwo;\nthree\n]",
    "expected_output": "[\"one\",\"two\",\"three\"]",
    "tested_features": [
      "array"
    ],
    "minimised_modl": "[one;two;three]"
  },
  {
    "id": "10",
    "input": "[\none;\ntwo;\nthree\n]",
    "expected_output": "[\"one\",\"two\",\"three\"]",
    "tested_features": [
      "array"
    ],
    "minimised_modl": "[one;two;three]"
  },
  {
    "id": "11",
    "input": " *class(\n *id=a;\n *name=alpha;\n *superclass=map;\n v=victor\n);\n*class(\n *id=b;\n *name=bravo;\n *superclass=alpha;\n w=whisky\n);\n*class(\n *id=c;\n *name=charlie;\n *superclass=bravo;\n x=xray\n);\n*class(\n *id=d;\n *name=delta;\n *superclass=charlie;\n y=yankee\n);\nd(test1=test2)",
    "expected_output": "{\"*class\":{\"*id\":\"d\",\"*name\":\"delta\",\"*superclass\":\"charlie\",\"y\":\"yankee\"},\"d\":{\"test1\":\"test2\"}}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;*s=map;v=victor);*c(*i=b;*n=bravo;*s=alpha;w=whisky);*c(*i=c;*n=charlie;*s=bravo;x=xray);*c(*i=d;*n=delta;*s=charlie;y=yankee);d(test1=test2)"
  },
  {
    "id": "12",
    "input": "*class(\n *id=a;\n *name=alpha;\n *superclass=map;\n v=victor\n);\n*class(\n *id=b;\n *name=bravo;\n *superclass=a;\n w=whisky\n);\n*class(\n *id=c;\n *name=charlie;\n *superclass=b;\n x=xray\n);\n*class(\n *id=d;\n *name=delta;\n *superclass=c;\n y=yankee\n);\nd(test1=test2)",
    "expected_output": "{\"*class\":{\"*id\":\"d\",\"*name\":\"delta\",\"*superclass\":\"c\",\"y\":\"yankee\"},\"d\":{\"test1\":\"test2\"}}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;*s=map;v=victor);*c(*i=b;*n=bravo;*s=a;w=whisky);*c(*i=c;*n=charlie;*s=b;x=xray);*c(*i=d;*n=delta;*s=c;y=yankee);d(test1=test2)"
  },
  {
    "id": "13",
    "input": "_test=[[a;b]];letters2=%test.0.0",
    "expected_output": "{\"_test\":[[\"a\",\"b\"]],\"letters2\":\"%test.0.0\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test[[a;b]];letters2=%test.0.0"
  },
  {
    "id": "14",
    "input": "*class(*id=object;*superclass=arr);sales(name=John Smith;telephone=44800 555 555);service(name=Jim Brown;telephone=44800 666 666)",
    "expected_output": "{\"*class\":{\"*id\":\"object\",\"*superclass\":\"arr\"},\"sales\":{\"name\":\"John Smith\",\"telephone\":\"44800 555 555\"},\"service\":{\"name\":\"Jim Brown\",\"telephone\":\"44800 666 666\"}}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=object;*s=arr);sales(name=John Smith;telephone=44800 555 555);service(name=Jim Brown;telephone=44800 666 666)"
  },
  {
    "id": "15",
    "input": "*class(\n *id=p;\n *NAME=person\n);\n\np(name=John Smith;dob=01/01/2001)",
    "expected_output": "{\"*class\":{\"*id\":\"p\",\"*NAME\":\"person\"},\"p\":{\"name\":\"John Smith\",\"dob\":\"01/01/2001\"}}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=p;*n=person);p(name=John Smith;dob=01/01/2001)"
  },
  {
    "id": "16",
    "input": "*class(*id=a;*name=age);a=10",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"age\"},\"a\":10}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=a;*n=age);a=10"
  },
  {
    "id": "17",
    "input": "*class(*id=a;*name=age;*superclass=num);a=10",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"age\",\"*superclass\":\"num\"},\"a\":10}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=a;*n=age;*s=num);a=10"
  },
  {
    "id": "18",
    "input": "*class(*id=a;*name=age;*superclass=str);a=10",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"age\",\"*superclass\":\"str\"},\"a\":10}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=a;*n=age;*s=str);a=10"
  },
  {
    "id": "19",
    "input": "*class(*id=newstr;*superclass=str);*class(*id=a;*name=age;*superclass=newstr);a=10",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"age\",\"*superclass\":\"newstr\"},\"a\":10}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=newstr;*s=str);*c(*i=a;*n=age;*s=newstr);a=10"
  },
  {
    "id": "20",
    "input": "?[[a;b;c]];letters=%0",
    "expected_output": "{\"?\":[[\"a\",\"b\",\"c\"]],\"letters\":\"%0\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "?[[a;b;c]];letters=%0"
  },
  {
    "id": "21",
    "input": "_test=123;object(print_test = %test.test)",
    "expected_output": "{\"_test\":123,\"object\":{\"print_test\":\"%test.test\"}}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test=123;object(print_test = %test.test)"
  },
  {
    "id": "22",
    "input": "?=one:two:three;test1=%0;test2=%1;test3=%2;test4=%3;test5=%4;test6=%5;test7=%6;test8=%7;test9=%8",
    "expected_output": "{\"?\":\"one:two:three\",\"test1\":\"%0\",\"test2\":\"%1\",\"test3\":\"%2\",\"test4\":\"%3\",\"test5\":\"%4\",\"test6\":\"%5\",\"test7\":\"%6\",\"test8\":\"%7\",\"test9\":\"%8\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "?=one:two:three;test1=%0;test2=%1;test3=%2;test4=%3;test5=%4;test6=%5;test7=%6;test8=%7;test9=%8"
  },
  {
    "id": "23",
    "input": "a=1:2:3;b=4:5:6",
    "expected_output": "{\"a\":\"1:2:3\",\"b\":\"4:5:6\"}",
    "tested_features": [
      "nbArray"
    ],
    "minimised_modl": "a=1:2:3;b=4:5:6"
  },
  {
    "id": "24",
    "input": "a=1:2:3;\nb=4:5:6",
    "expected_output": "{\"a\":\"1:2:3\",\"b\":\"4:5:6\"}",
    "tested_features": [
      "nbArray"
    ],
    "minimised_modl": "a=1:2:3;\nb=4:5:6"
  },
  {
    "id": "25",
    "input": "a=1:2:3\n;\nb=4:5:6",
    "expected_output": "{\"a\":\"1:2:3\",\"b\":\"4:5:6\"}",
    "tested_features": [
      "nbArray"
    ],
    "minimised_modl": "a=1:2:3;b=4:5:6"
  },
  {
    "id": "26",
    "input": "_test=(a=b=c=d=f);\nx=%test.a.b.c.d",
    "expected_output": "{\"_test\":{\"a\":{\"b\":{\"c\":{\"d\":\"f\"}}}},\"x\":\"%test.a.b.c.d\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test(a=b=c=d=f);x=%test.a.b.c.d"
  },
  {
    "id": "27",
    "input": "a(b(c(d(e(f=1)))));\ntesting=%a.b.c.d.e.f",
    "expected_output": "{\"a\":{\"b\":{\"c\":{\"d\":{\"e\":{\"f\":1}}}}},\"testing\":\"%a.b.c.d.e.f\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "a(b(c(d(e(f=1)))));testing=%a.b.c.d.e.f"
  },
  {
    "id": "28",
    "input": "_test=(a=b=c=d=f);\ntesting=%test.a.b.c.d",
    "expected_output": "{\"_test\":{\"a\":{\"b\":{\"c\":{\"d\":\"f\"}}}},\"testing\":\"%test.a.b.c.d\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test(a=b=c=d=f);testing=%test.a.b.c.d"
  },
  {
    "id": "29",
    "input": "a=\nb\n=c;\nd=e",
    "expected_output": "{\"a\":{\"b\":\"c\"},\"d\":\"e\"}",
    "tested_features": [
      "map"
    ],
    "minimised_modl": "a=b=c;d=e"
  },
  {
    "id": "30",
    "input": "test=this is a #hashtag test;test2=#testing 123",
    "expected_output": "{\"test\":\"this is a #hashtag test\",\"test2\":\"#testing 123\"}",
    "tested_features": [
      "pair"
    ],
    "minimised_modl": "test=this is a #hashtag test;test2=#testing 123"
  },
  {
    "id": "31",
    "input": "a=(b=c=d=e=f)",
    "expected_output": "{\"a\":{\"b\":{\"c\":{\"d\":{\"e\":\"f\"}}}}}",
    "tested_features": [
      "map"
    ],
    "minimised_modl": "a(b=c=d=e=f)"
  },
  {
    "id": "32",
    "input": "a=b=c=d=e=f",
    "expected_output": "{\"a\":{\"b\":{\"c\":{\"d\":{\"e\":\"f\"}}}}}",
    "tested_features": [
      "map"
    ],
    "minimised_modl": "a=b=c=d=e=f"
  },
  {
    "id": "33",
    "input": "a=(b=(c=(d=(e=f))))",
    "expected_output": "{\"a\":{\"b\":{\"c\":{\"d\":{\"e\":\"f\"}}}}}",
    "tested_features": [
      "map"
    ],
    "minimised_modl": "a(b(c(d(e=f))))"
  },
  {
    "id": "34",
    "input": "_testing = quick-test of John's variable_methods;\nupcase_example = %testing.u;\ndowncase_example = %testing.d;\ninitcap_example = %testing.i;\nsentence_example = %testing.s;\nurl_encode_example = %testing.u.e",
    "expected_output": "{\"_testing\":\"quick-test of John's variable_methods\",\"upcase_example\":\"%testing.u\",\"downcase_example\":\"%testing.d\",\"initcap_example\":\"%testing.i\",\"sentence_example\":\"%testing.s\",\"url_encode_example\":\"%testing.u.e\"}",
    "tested_features": [
      "string_method"
    ],
    "minimised_modl": "_testing=quick-test of John's variable_methods;upcase_example=%testing.u;downcase_example=%testing.d;initcap_example=%testing.i;sentence_example=%testing.s;url_encode_example=%testing.u.e"
  },
  {
    "id": "35",
    "input": "*VERSION=1;\n\"test\"=1",
    "expected_output": "{\"*VERSION\":1,\"test\":1}",
    "tested_features": [
      "version"
    ],
    "minimised_modl": "*VERSION=1;test=1"
  },
  {
    "id": "36",
    "input": "*VERSION=100;\n\"test\"=1",
    "expected_output": "{\"*VERSION\":100,\"test\":1}",
    "tested_features": [
      "version"
    ],
    "minimised_modl": "*VERSION=100;test=1"
  },
  {
    "id": "37",
    "input": "_branch=\"alex.\";\n_root=d;\nnamespace=%branch%blah.%root",
    "expected_output": "{\"_branch\":\"alex.\",\"_root\":\"d\",\"namespace\":\"%branch%blah.%root\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_branch=alex.;_root=d;namespace=%branch%blah.%root"
  },
  {
    "id": "38",
    "input": "namespace=%branch%blah.%root",
    "expected_output": "{\"namespace\":\"%branch%blah.%root\"}",
    "tested_features": [
      "pair",
      "graves"
    ],
    "minimised_modl": "namespace=%branch%blah.%root"
  },
  {
    "id": "39",
    "input": "_root=tesco.com;\n_branch=direct.;\nnamespace1=%branch%numrecord.%root;\nnamespace2=%branch%_%root%.numq.net",
    "expected_output": "{\"_root\":\"tesco.com\",\"_branch\":\"direct.\",\"namespace1\":\"%branch%numrecord.%root\",\"namespace2\":\"%branch%_%root%.numq.net\"}",
    "tested_features": [
      "object_ref",
      "graves"
    ],
    "minimised_modl": "_root=tesco.com;_branch=direct.;namespace1=%branch%numrecord.%root;namespace2=%branch%_%root%.numq.net"
  },
  {
    "id": "40",
    "input": "_branch=\"\";\n_root=\"\";\nnamespace=%branch%numrecord.%root",
    "expected_output": "{\"_branch\":\"\",\"_root\":\"\",\"namespace\":\"%branch%numrecord.%root\"}",
    "tested_features": [
      "object_ref",
      "graves"
    ],
    "minimised_modl": "_branch=``;_root=``;namespace=%branch%numrecord.%root"
  },
  {
    "id": "41",
    "input": "*CLASS(\n *id=p;\n *name=person;\n *SUPERCLASS=map\n);\n\np(name=John Smith;dob=01/01/2000)",
    "expected_output": "{\"*CLASS\":{\"*id\":\"p\",\"*name\":\"person\",\"*SUPERCLASS\":\"map\"},\"p\":{\"name\":\"John Smith\",\"dob\":\"01/01/2000\"}}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=p;*n=person;*s=map);p(name=John Smith;dob=01/01/2000)"
  },
  {
    "id": "42",
    "input": "*c(\n *i=m;\n *n=message;\n *S=map;\n *a=[\n   [direction;date_time;message]\n ];\n method=sms\n);\nm=in:2018-03-22:hi",
    "expected_output": "{\"*c\":{\"*i\":\"m\",\"*n\":\"message\",\"*S\":\"map\",\"*a\":[[\"direction\",\"date_time\",\"message\"]],\"method\":\"sms\"},\"m\":\"in:2018-03-22:hi\"}",
    "tested_features": [
      "class",
      "assign"
    ],
    "minimised_modl": "*c(*i=m;*n=message;*S=map;*a[[direction;date_time;message]];method=sms);m=in:2018-03-22:hi"
  },
  {
    "id": "43",
    "input": "*class(\n *id=car;\n *name=car;\n *superclass=map\n);\n\ncar(\n make=Bentley\n)",
    "expected_output": "{\"*class\":{\"*id\":\"car\",\"*name\":\"car\",\"*superclass\":\"map\"},\"car\":{\"make\":\"Bentley\"}}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=car;*n=car;*s=map);car(make=Bentley)"
  },
  {
    "id": "44",
    "input": "?=[one;two];\ntest=Blah %0.s %1.s",
    "expected_output": "{\"?\":[\"one\",\"two\"],\"test\":\"Blah %0.s %1.s\"}",
    "tested_features": [
      "object_ref",
      "graves",
      "string_method"
    ],
    "minimised_modl": "?=one:two;test=Blah %0.s %1.s"
  },
  {
    "id": "45",
    "input": "?=one:two;\ntest=Blah %0.r<o,huzzah> %1.t<w>",
    "expected_output": "{\"?\":\"one:two\",\"test\":\"Blah %0.r<o,huzzah> %1.t<w>\"}",
    "tested_features": [
      "object_ref",
      "graves",
      "string_method"
    ],
    "minimised_modl": "?=one:two;test=Blah %0.r<o,huzzah> %1.t<w>"
  },
  {
    "id": "46",
    "input": "_test=\"123\";\nobject(\n print_test = %test%.test\n)",
    "expected_output": "{\"_test\":\"123\",\"object\":{\"print_test\":\"%test%.test\"}}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test=`123`;object(print_test=%test%.test)"
  },
  {
    "id": "47",
    "input": "_var = NotThisOne;\n_var=%var%blah;\nout=%var%deblah",
    "expected_output": "{\"_var\":\"%var%blah\",\"out\":\"%var%deblah\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_var = NotThisOne;_var=%var%blah;out=%var%deblah"
  },
  {
    "id": "48",
    "input": "_var = NotThisOne;\n_var=blah;\nout=%var%deblah",
    "expected_output": "{\"_var\":\"blah\",\"out\":\"%var%deblah\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_var = NotThisOne;_var=blah;out=%var%deblah"
  },
  {
    "id": "49",
    "input": "test(\n map(\n   array[]\n );\n array[\n   map();\n   array[1;2;3]\n ]\n)",
    "expected_output": "{\"test\":{\"map\":{\"array\":[]},\"array\":[{\"map\":{}},{\"array\":[1,2,3]}]}}",
    "tested_features": [
      "array",
      "map"
    ],
    "minimised_modl": "test(map(array[]);array[map();array=1:2:3])"
  },
  {
    "id": "50",
    "input": "test=()",
    "expected_output": "{\"test\":{}}",
    "tested_features": [
      "map"
    ],
    "minimised_modl": "test()"
  },
  {
    "id": "51",
    "input": "true2 = true;\ntrue1 = true;\nfalse2 = false;\nfalse1 = false;\nnull2 = null;\nnull1 = null",
    "expected_output": "{\"true2\":true,\"true1\":true,\"false2\":false,\"false1\":false,\"null2\":null,\"null1\":null}",
    "tested_features": [
      "bool",
      "map",
      "null"
    ],
    "minimised_modl": "true2=true;true1=true;false2=false;false1=false;null2=null;null1=null"
  },
  {
    "id": "52",
    "input": "_person(  \n name(\n   first=John;\n   last=Smith\n )\n);\nsay=%person.name.first",
    "expected_output": "{\"_person\":{\"name\":{\"first\":\"John\",\"last\":\"Smith\"}},\"say\":\"%person.name.first\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_person(name(first=John;last=Smith));say=%person.name.first"
  },
  {
    "id": "53",
    "input": "_C=gb;\n_COUNTRIES(\n us=United States;\n gb=United Kingdom;\n de=Germany\n);\n\ncountry_name = %COUNTRIES.%C",
    "expected_output": "{\"_C\":\"gb\",\"_COUNTRIES\":{\"us\":\"United States\",\"gb\":\"United Kingdom\",\"de\":\"Germany\"},\"country_name\":\"%COUNTRIES.%C\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_C=gb;_COUNTRIES(us=United States;gb=United Kingdom;de=Germany);country_name=%COUNTRIES.%C"
  },
  {
    "id": "54",
    "input": "_person(  \n name(\n   first=\"John\"\n )\n);\na=%person.name.first",
    "expected_output": "{\"_person\":{\"name\":{\"first\":\"John\"}},\"a\":\"%person.name.first\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_person(name(first=John));a=%person.name.first"
  },
  {
    "id": "55",
    "input": "_test=123;\nprint=%_test",
    "expected_output": "{\"_test\":123,\"print\":\"%_test\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test=123;print=%_test"
  },
  {
    "id": "56",
    "input": "?[[a;b;c];[one;two;three]];letters=%0;numbers=%1",
    "expected_output": "{\"?\":[[\"a\",\"b\",\"c\"],[\"one\",\"two\",\"three\"]],\"letters\":\"%0\",\"numbers\":\"%1\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "?=[a;b;c]:[one;two;three];letters=%0;numbers=%1"
  },
  {
    "id": "57",
    "input": "?[a;b;c];letters=%0",
    "expected_output": "{\"?\":[\"a\",\"b\",\"c\"],\"letters\":\"%0\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "?=a:b:c;letters=%0"
  },
  {
    "id": "58",
    "input": "?[zero;one;two];\nfirst_var=%0;\nsecond_var=%1;\nthird_var=%2",
    "expected_output": "{\"?\":[\"zero\",\"one\",\"two\"],\"first_var\":\"%0\",\"second_var\":\"%1\",\"third_var\":\"%2\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "?=zero:one:two;first_var=%0;second_var=%1;third_var=%2"
  },
  {
    "id": "59",
    "input": "_test[a;b;c];alex=%test.0",
    "expected_output": "{\"_test\":[\"a\",\"b\",\"c\"],\"alex\":\"%test.0\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test=a:b:c;alex=%test.0"
  },
  {
    "id": "60",
    "input": "?[a;b;c];alex=%0",
    "expected_output": "{\"?\":[\"a\",\"b\",\"c\"],\"alex\":\"%0\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "?=a:b:c;alex=%0"
  },
  {
    "id": "61",
    "input": "alex=1.2345",
    "expected_output": "{\"alex\":1.2345}",
    "tested_features": [
      "pair"
    ],
    "minimised_modl": "alex=1.2345"
  },
  {
    "id": "62",
    "input": "?=zero:one:two;\ndiscount=%30",
    "expected_output": "{\"?\":\"zero:one:two\",\"discount\":\"%30\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "?=zero:one:two;discount=%30"
  },
  {
    "id": "63",
    "input": "test=[]",
    "expected_output": "{\"test\":[]}",
    "tested_features": [
      "pair",
      "array"
    ],
    "minimised_modl": "test[]"
  },
  {
    "id": "64",
    "input": "test(\n empty_array=[];\n empty_map=()\n)\n",
    "expected_output": "{\"test\":{\"empty_array\":[],\"empty_map\":{}}}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "test(empty_array[];empty_map())"
  },
  {
    "id": "65",
    "input": "?=0:1:2;\nzero=%0;\none=%1;\ntwo=%2",
    "expected_output": "{\"?\":\"0:1:2\",\"zero\":\"%0\",\"one\":\"%1\",\"two\":\"%2\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "?=0:1:2;zero=%0;one=%1;two=%2"
  },
  {
    "id": "66",
    "input": "?=a:b:c;\nzero=%0;\none=%1;\ntwo=%2\n",
    "expected_output": "{\"?\":\"a:b:c\",\"zero\":\"%0\",\"one\":\"%1\",\"two\":\"%2\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "?=a:b:c;zero=%0;one=%1;two=%2"
  },
  {
    "id": "67",
    "input": "test=100%",
    "expected_output": "{\"test\":\"100%\"}",
    "tested_features": [
      "pair"
    ],
    "minimised_modl": "test=100%"
  },
  {
    "id": "68",
    "input": "test=`test`",
    "expected_output": "{\"test\":\"test\"}",
    "tested_features": [
      "pair",
      "graves"
    ],
    "minimised_modl": "test=test"
  },
  {
    "id": "69",
    "input": "test=!",
    "expected_output": "{\"test\":\"!\"}",
    "tested_features": [
      "pair"
    ],
    "minimised_modl": "test=`!`"
  },
  {
    "id": "70",
    "input": "test=[zero;one]",
    "expected_output": "{\"test\":[\"zero\",\"one\"]}",
    "tested_features": [
      "pair",
      "array"
    ],
    "minimised_modl": "test=zero:one"
  },
  {
    "id": "71",
    "input": "_COUNTRY=gb;\ncountry=The country is %COUNTRY",
    "expected_output": "{\"_COUNTRY\":\"gb\",\"country\":\"The country is %COUNTRY\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_COUNTRY=gb;country=The country is %COUNTRY"
  },
  {
    "id": "72",
    "input": "COUNTRY=gb;\ncountry=The country is %COUNTRY",
    "expected_output": "{\"COUNTRY\":\"gb\",\"country\":\"The country is %COUNTRY\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "COUNTRY=gb;country=The country is %COUNTRY"
  },
  {
    "id": "73",
    "input": "_co=gb;\ncountry=The country is %co",
    "expected_output": "{\"_co\":\"gb\",\"country\":\"The country is %co\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_co=gb;country=The country is %co"
  },
  {
    "id": "74",
    "input": "_test = 123;\n_test2 = abc",
    "expected_output": "{\"_test\":123,\"_test2\":\"abc\"}",
    "tested_features": [
      "object_ref",
      "null"
    ],
    "minimised_modl": "_test=123;_test2=abc"
  },
  {
    "id": "75",
    "input": "_co=gb;\ntest=123",
    "expected_output": "{\"_co\":\"gb\",\"test\":123}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_co=gb;test=123"
  },
  {
    "id": "76",
    "input": "*method(\n *id=cn;\n *name=company_name;\n *transform=replace<-, >.trim<.>.initcap\n);\n\n_domain = smiths-limited.com;\nfriendly_name = %domain.cn",
    "expected_output": "{\"*method\":{\"*id\":\"cn\",\"*name\":\"company_name\",\"*transform\":\"replace<-, >.trim<.>.initcap\"},\"_domain\":\"smiths-limited.com\",\"friendly_name\":\"%domain.cn\"}",
    "tested_features": [
      "method"
    ],
    "minimised_modl": "*m(*i=cn;*n=company_name;*transform=replace<-, >.trim<.>.initcap);_domain=smiths-limited.com;friendly_name=%domain.cn"
  },
  {
    "id": "77",
    "input": "*method(\n *id=rt;\n *name=remove_two;\n *transform=replace<two,>\n);\n\n_numbers = one two three;\nname = %numbers.rt",
    "expected_output": "{\"*method\":{\"*id\":\"rt\",\"*name\":\"remove_two\",\"*transform\":\"replace<two,>\"},\"_numbers\":\"one two three\",\"name\":\"%numbers.rt\"}",
    "tested_features": [
      "method"
    ],
    "minimised_modl": "*m(*i=rt;*n=remove_two;*transform=replace<two,>);_numbers=one two three;name=%numbers.rt"
  },
  {
    "id": "78",
    "input": "_var=2;\n*L=\"http://modl.uk/tests/testing.txt!\";\nprint=%update_date\n",
    "expected_output": "{\"_var\":2,\"*L\":\"http://modl.uk/tests/testing.txt!\",\"print\":\"%update_date\"}",
    "tested_features": [
      "object_ref",
      "load"
    ],
    "minimised_modl": "_var=2;*L=`http://modl.uk/tests/testing.txt!`;print=%update_date"
  },
  {
    "id": "79",
    "input": "_T=../grammar/tests/demo;\n*L=%T%_config",
    "expected_output": "{\"_T\":\"../grammar/tests/demo\",\"*L\":\"%T%_config\"}",
    "tested_features": [
      "object_ref",
      "load",
      "null"
    ],
    "minimised_modl": "_T=../grammar/tests/demo;*L=%T%_config"
  },
  {
    "id": "80",
    "input": "*l=../grammar/tests/1;*L=../grammar/tests/1;a=1",
    "expected_output": "{\"*l\":\"../grammar/tests/1\",\"*L\":\"../grammar/tests/1\",\"a\":1}",
    "tested_features": [
      "load"
    ],
    "minimised_modl": "*l=../grammar/tests/1:../grammar/tests/1;a=1"
  },
  {
    "id": "81",
    "input": "*l=../grammar/tests/1;*l=../grammar/tests/1;a=1",
    "expected_output": "{\"*l\":\"../grammar/tests/1\",\"a\":1}",
    "tested_features": [
      "load"
    ],
    "minimised_modl": "*l=../grammar/tests/1:../grammar/tests/1;a=1"
  },
  {
    "id": "82",
    "input": "*l=../grammar/tests/1:../grammar/tests/2:../grammar/tests/3;\nthe_number=%number",
    "expected_output": "{\"*l\":\"../grammar/tests/1:../grammar/tests/2:../grammar/tests/3\",\"the_number\":\"%number\"}",
    "tested_features": [
      "object_ref",
      "load"
    ],
    "minimised_modl": "*l=../grammar/tests/1:../grammar/tests/2:../grammar/tests/3;the_number=%number"
  },
  {
    "id": "83",
    "input": "*l=../grammar/tests/1:../grammar/tests/2:../grammar/tests/3:../grammar/tests/1;\nthe_number=%number",
    "expected_output": "{\"*l\":\"../grammar/tests/1:../grammar/tests/2:../grammar/tests/3:../grammar/tests/1\",\"the_number\":\"%number\"}",
    "tested_features": [
      "object_ref",
      "load"
    ],
    "minimised_modl": "*l=../grammar/tests/1:../grammar/tests/2:../grammar/tests/3:../grammar/tests/1;the_number=%number"
  },
  {
    "id": "84",
    "input": "*l[../grammar/tests/1;../grammar/tests/2;../grammar/tests/3;../grammar/tests/1];\nthe_number=%number",
    "expected_output": "{\"*l\":[\"../grammar/tests/1\",\"../grammar/tests/2\",\"../grammar/tests/3\",\"../grammar/tests/1\"],\"the_number\":\"%number\"}",
    "tested_features": [
      "object_ref",
      "load"
    ],
    "minimised_modl": "*l=../grammar/tests/1:../grammar/tests/2:../grammar/tests/3:../grammar/tests/1;the_number=%number"
  },
  {
    "id": "85",
    "input": "*l=../grammar/tests/a:../grammar/tests/b:../grammar/tests/c;\nvar=%var",
    "expected_output": "{\"*l\":\"../grammar/tests/a:../grammar/tests/b:../grammar/tests/c\",\"var\":\"%var\"}",
    "tested_features": [
      "object_ref",
      "load"
    ],
    "minimised_modl": "*l=../grammar/tests/a:../grammar/tests/b:../grammar/tests/c;var=%var"
  },
  {
    "id": "86",
    "input": "o=[test;test;t=Customer Service:44123]",
    "expected_output": "{\"o\":[\"test\",\"test\",{\"t\":\"Customer Service:44123\"}]}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "o[test;test;t=Customer Service:44123]"
  },
  {
    "id": "87",
    "input": "test[number=1;number=2;number=3]",
    "expected_output": "{\"test\":[{\"number\":1},{\"number\":2},{\"number\":3}]}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "test[number=1;number=2;number=3]"
  },
  {
    "id": "88",
    "input": "test(one=1;two=2;three=3)",
    "expected_output": "{\"test\":{\"one\":1,\"two\":2,\"three\":3}}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "test(one=1;two=2;three=3)"
  },
  {
    "id": "89",
    "input": "test=test",
    "expected_output": "{\"test\":\"test\"}",
    "tested_features": [
      "pair"
    ],
    "minimised_modl": "test=test"
  },
  {
    "id": "90",
    "input": "one=1;two=2;three=3",
    "expected_output": "{\"one\":1,\"two\":2,\"three\":3}",
    "tested_features": [
      "map",
      "pair"
    ],
    "minimised_modl": "one=1;two=2;three=3"
  },
  {
    "id": "91",
    "input": "[o(n=test);o(n=test2)]",
    "expected_output": "[{\"o\":{\"n\":\"test\"}},{\"o\":{\"n\":\"test2\"}}]",
    "tested_features": [
      "map",
      "pair"
    ],
    "minimised_modl": "[o(n=test);o(n=test2)]"
  },
  {
    "id": "92",
    "input": "R=0;\nnumber1=1;number2=2;number3=3",
    "expected_output": "{\"R\":0,\"number1\":1,\"number2\":2,\"number3\":3}",
    "tested_features": [
      "map",
      "array",
      "pair"
    ],
    "minimised_modl": "R=0;number1=1;number2=2;number3=3"
  },
  {
    "id": "93",
    "input": "test=(one=1)",
    "expected_output": "{\"test\":{\"one\":1}}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "test(one=1)"
  },
  {
    "id": "94",
    "input": "test(one=1)",
    "expected_output": "{\"test\":{\"one\":1}}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "test(one=1)"
  },
  {
    "id": "95",
    "input": "test=[1;2;3]",
    "expected_output": "{\"test\":[1,2,3]}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "test=1:2:3"
  },
  {
    "id": "96",
    "input": "test[1;2;3]",
    "expected_output": "{\"test\":[1,2,3]}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "test=1:2:3"
  },
  {
    "id": "97",
    "input": "o(n=Tesco;s=Every Little Helps)",
    "expected_output": "{\"o\":{\"n\":\"Tesco\",\"s\":\"Every Little Helps\"}}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "o(n=Tesco;s=Every Little Helps)"
  },
  {
    "id": "98",
    "input": "o(n=test)",
    "expected_output": "{\"o\":{\"n\":\"test\"}}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "o(n=test)"
  },
  {
    "id": "99",
    "input": "o(n=test)\n",
    "expected_output": "{\"o\":{\"n\":\"test\"}}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "o(n=test)"
  },
  {
    "id": "100",
    "input": "o(\nn=test\n)",
    "expected_output": "{\"o\":{\"n\":\"test\"}}",
    "tested_features": [
      "undefined"
    ],
    "minimised_modl": "o(n=test)"
  },
  {
    "id": "101",
    "input": "o1(n=test);\no2(n=test2)",
    "expected_output": "{\"o1\":{\"n\":\"test\"},\"o2\":{\"n\":\"test2\"}}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "o1(n=test);o2(n=test2)"
  },
  {
    "id": "102",
    "input": "o1(n=test);o2(n=test2)",
    "expected_output": "{\"o1\":{\"n\":\"test\"},\"o2\":{\"n\":\"test2\"}}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "o1(n=test);o2(n=test2)"
  },
  {
    "id": "103",
    "input": "o=[test;test]",
    "expected_output": "{\"o\":[\"test\",\"test\"]}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "o=test:test"
  },
  {
    "id": "104",
    "input": "o=test",
    "expected_output": "{\"o\":\"test\"}",
    "tested_features": [
      "pair"
    ],
    "minimised_modl": "o=test"
  },
  {
    "id": "105",
    "input": "o=[1;2]",
    "expected_output": "{\"o\":[1,2]}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "o=1:2"
  },
  {
    "id": "106",
    "input": "o=[test1;test2]",
    "expected_output": "{\"o\":[\"test1\",\"test2\"]}",
    "tested_features": [
      "map",
      "array"
    ],
    "minimised_modl": "o=test1:test2"
  },
  {
    "id": "107",
    "input": "o(t=test1;t2=test2)",
    "expected_output": "{\"o\":{\"t\":\"test1\",\"t2\":\"test2\"}}",
    "tested_features": [
      "map"
    ],
    "minimised_modl": "o(t=test1;t2=test2)"
  },
  {
    "id": "108",
    "input": "o(t(a=test;b=test2);t2(c=test;d=test2))",
    "expected_output": "{\"o\":{\"t\":{\"a\":\"test\",\"b\":\"test2\"},\"t2\":{\"c\":\"test\",\"d\":\"test2\"}}}",
    "tested_features": [
      "map"
    ],
    "minimised_modl": "o(t(a=test;b=test2);t2(c=test;d=test2))"
  },
  {
    "id": "109",
    "input": "o=1:2::4:5",
    "expected_output": "{\"o\":\"1:2::4:5\"}",
    "tested_features": [
      "pair",
      "nbArray",
      "null"
    ],
    "minimised_modl": "o=1:2::4:5"
  },
  {
    "id": "110",
    "input": "o=[1;2;4;5]",
    "expected_output": "{\"o\":[1,2,4,5]}",
    "tested_features": [
      "pair",
      "array",
      "null"
    ],
    "minimised_modl": "o=1:2::4:5"
  },
  {
    "id": "111",
    "input": "o=[1;\n2;\n\n3;\n4;\n5]",
    "expected_output": "{\"o\":[1,2,3,4,5]}",
    "tested_features": [
      "pair",
      "array"
    ],
    "minimised_modl": "o=1:2:3:4:5"
  },
  {
    "id": "112",
    "input": "o=[1 2 3 4 5]",
    "expected_output": "{\"o\":[\"1 2 3 4 5\"]}",
    "tested_features": [
      "pair"
    ],
    "minimised_modl": "o[1 2 3 4 5]"
  },
  {
    "id": "113",
    "input": "o=`ok`",
    "expected_output": "{\"o\":\"ok\"}",
    "tested_features": [
      "pair",
      "graves"
    ],
    "minimised_modl": "o=ok"
  },
  {
    "id": "114",
    "input": "o=``",
    "expected_output": "{\"o\":\"\"}",
    "tested_features": [
      "pair",
      "graves"
    ],
    "minimised_modl": "o=``"
  },
  {
    "id": "115",
    "input": "_test=(\n  numbers=[[1;2;3;4;5];[6;7;8;9;10]]\n);\n \ntesting=%test.numbers.0.0",
    "expected_output": "{\"_test\":{\"numbers\":[[1,2,3,4,5],[6,7,8,9,10]]},\"testing\":\"%test.numbers.0.0\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test(numbers=[1;2;3;4;5]:[6;7;8;9;10]);testing=%test.numbers.0.0"
  },
  {
    "id": "116",
    "input": "_test=(\n  numbers=(\"one\"=1)\n);\n \ntesting = this is a string that includes a reference with a letter s after it %test.numbers.one%s",
    "expected_output": "{\"_test\":{\"numbers\":{\"one\":1}},\"testing\":\"this is a string that includes a reference with a letter s after it %test.numbers.one%s\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test(numbers(one=1));testing=this is a string that includes a reference with a letter s after it %test.numbers.one%s"
  },
  {
    "id": "117",
    "input": "_test=(\n  numbers=(\"v\"=TEST)\n);\n \ntesting = this is a string that includes extra transforms for the value %test.numbers.v.d%_value",
    "expected_output": "{\"_test\":{\"numbers\":{\"v\":\"TEST\"}},\"testing\":\"this is a string that includes extra transforms for the value %test.numbers.v.d%_value\"}",
    "tested_features": [
      "object_ref",
      "string_method"
    ],
    "minimised_modl": "_test(numbers(v=TEST));testing=this is a string that includes extra transforms for the value %test.numbers.v.d%_value"
  },
  {
    "id": "118",
    "input": "_test=(\n  first=(\"v\"=TEST);\n  second=(\"v\"=TEST2)\n);\n \ntesting = this is a string that includes extra transforms for the value %test.second.v.d%_value",
    "expected_output": "{\"_test\":{\"first\":{\"v\":\"TEST\"},\"second\":{\"v\":\"TEST2\"}},\"testing\":\"this is a string that includes extra transforms for the value %test.second.v.d%_value\"}",
    "tested_features": [
      "object_ref",
      "string_method"
    ],
    "minimised_modl": "_test(first(v=TEST);second(v=TEST2));testing=this is a string that includes extra transforms for the value %test.second.v.d%_value"
  },
  {
    "id": "119",
    "input": "_test=(\n  first=(\"v1\"=one);\n  second=(\"v2\"=two:three)\n);\n \ntesting = %test.second.v2.1",
    "expected_output": "{\"_test\":{\"first\":{\"v1\":\"one\"},\"second\":{\"v2\":\"two:three\"}},\"testing\":\"%test.second.v2.1\"}",
    "tested_features": [
      "object_ref",
      "graves"
    ],
    "minimised_modl": "_test(first(v1=one);second(v2=two:three));testing=%test.second.v2.1"
  },
  {
    "id": "120",
    "input": "_test=(\n  first=(\"v1\"=[one]);\n  second=(\"v2\"=two:three)\n);\n \ntesting = %test.first.v1.0%%test.second.v2.0%%test.second.v2.1",
    "expected_output": "{\"_test\":{\"first\":{\"v1\":[\"one\"]},\"second\":{\"v2\":\"two:three\"}},\"testing\":\"%test.first.v1.0%%test.second.v2.0%%test.second.v2.1\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test(first(v1[one]);second(v2=two:three));testing=%test.first.v1.0%%test.second.v2.0%%test.second.v2.1"
  },
  {
    "id": "121",
    "input": "_test=(\n  first=(\"v1\"=(one=(two=three)))\n);\n \ntesting = %test.first.v1.one.two",
    "expected_output": "{\"_test\":{\"first\":{\"v1\":{\"one\":{\"two\":\"three\"}}}},\"testing\":\"%test.first.v1.one.two\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test(first(v1(one(two=three))));testing=%test.first.v1.one.two"
  },
  {
    "id": "122",
    "input": "o=1:2:3:4:5",
    "expected_output": "{\"o\":\"1:2:3:4:5\"}",
    "tested_features": [
      "nbArray"
    ],
    "minimised_modl": "o=1:2:3:4:5"
  },
  {
    "id": "123",
    "input": "o=[1;2;3;4;5]",
    "expected_output": "{\"o\":[1,2,3,4,5]}",
    "tested_features": [
      "array"
    ],
    "minimised_modl": "o=1:2:3:4:5"
  },
  {
    "id": "124",
    "input": "o=[1;\n2;\n3;\n4;\n5]",
    "expected_output": "{\"o\":[1,2,3,4,5]}",
    "tested_features": [
      "undefined"
    ],
    "minimised_modl": "o=1:2:3:4:5"
  },
  {
    "id": "125",
    "input": "o=\"ok\"",
    "expected_output": "{\"o\":\"ok\"}",
    "tested_features": [
      "pair"
    ],
    "minimised_modl": "o=ok"
  },
  {
    "id": "126",
    "input": "o=\"\"",
    "expected_output": "{\"o\":\"\"}",
    "tested_features": [
      "pair"
    ],
    "minimised_modl": "o=``"
  },
  {
    "id": "127",
    "input": "_test=( numbers=[[1;2;3;4;5];[6;7;8;9;10]]\n);\n \ntesting=%test.numbers.0.0",
    "expected_output": "{\"_test\":{\"numbers\":[[1,2,3,4,5],[6,7,8,9,10]]},\"testing\":\"%test.numbers.0.0\"}",
    "tested_features": [
      "undefined"
    ],
    "minimised_modl": "_test(numbers=[1;2;3;4;5]:[6;7;8;9;10]);testing=%test.numbers.0.0"
  },
  {
    "id": "128",
    "input": "_test=(\n  numbers=(\"one\"=1)\n);\n\ntesting = this is a string that includes a reference with a letter s after it %test.numbers.one%s",
    "expected_output": "{\"_test\":{\"numbers\":{\"one\":1}},\"testing\":\"this is a string that includes a reference with a letter s after it %test.numbers.one%s\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test(numbers(one=1));testing=this is a string that includes a reference with a letter s after it %test.numbers.one%s"
  },
  {
    "id": "129",
    "input": "x=[1;2:3:4]",
    "expected_output": "{\"x\":[1,\"2:3:4\"]}",
    "tested_features": [
      "array",
      "pair"
    ],
    "minimised_modl": "x=1:[2;3;4]"
  },
  {
    "id": "130",
    "input": "_x=[1;2:3:4];\na=%x.1.1",
    "expected_output": "{\"_x\":[1,\"2:3:4\"],\"a\":\"%x.1.1\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_x=1:[2;3;4];a=%x.1.1"
  },
  {
    "id": "131",
    "input": "x=[1;2:::::::::3;4:::::::::5]",
    "expected_output": "{\"x\":[1,\"2:::::::::3\",\"4:::::::::5\"]}",
    "tested_features": [
      "array",
      "map",
      "null"
    ],
    "minimised_modl": "x=[1;2:::::::::3;4:::::::::5]"
  },
  {
    "id": "132",
    "input": "*class(*id=a;*name=alpha);a=b",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\"},\"a\":\"b\"}",
    "tested_features": [
      "class",
      "superclass_inference"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha);a=b"
  },
  {
    "id": "133",
    "input": "*class(*id=a;*name=alpha);a=1",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\"},\"a\":1}",
    "tested_features": [
      "class",
      "superclass_inference"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha);a=1"
  },
  {
    "id": "134",
    "input": "*class(*id=a;*name=alpha);a=true",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\"},\"a\":true}",
    "tested_features": [
      "class",
      "superclass_inference"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha);a=01"
  },
  {
    "id": "135",
    "input": "*class(*id=a;*name=alpha);a=null",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\"},\"a\":null}",
    "tested_features": [
      "class",
      "superclass_inference"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha);a=000"
  },
  {
    "id": "136",
    "input": "*class(*id=a;*name=alpha);a=[1;2;3];b=4:5:6",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\"},\"a\":[1,2,3],\"b\":\"4:5:6\"}",
    "tested_features": [
      "class",
      "superclass_inference"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha);a=1:2:3;b=4:5:6"
  },
  {
    "id": "137",
    "input": "*class(*id=a;*name=alpha);a=(b=c)",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\"},\"a\":{\"b\":\"c\"}}",
    "tested_features": [
      "class",
      "superclass_inference"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha);a(b=c)"
  },
  {
    "id": "138",
    "input": "*class(*id=a;*name=alpha;x=\"test\");a=1",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\",\"x\":\"test\"},\"a\":1}",
    "tested_features": [
      "class",
      "superclass_inference"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;x=test);a=1"
  },
  {
    "id": "139",
    "input": "*class(*id=a;*name=alpha;*assign[[x]]);a=1\n",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\",\"*assign\":[[\"x\"]]},\"a\":1}",
    "tested_features": [
      "class",
      "superclass_inference"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;*a[[x]]);a=1"
  },
  {
    "id": "140",
    "input": "*class(*id=a;*name=alpha;*superclass=str);a=1",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\",\"*superclass\":\"str\"},\"a\":1}",
    "tested_features": [
      "class",
      "superclass"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;*s=str);a=1"
  },
  {
    "id": "141",
    "input": "*class(*id=a;*name=alpha;*superclass=str);a=true",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\",\"*superclass\":\"str\"},\"a\":true}",
    "tested_features": [
      "class",
      "superclass"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;*s=str);a=01"
  },
  {
    "id": "142",
    "input": "*class(*id=a;*name=alpha;*superclass=num);a=1\n",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\",\"*superclass\":\"num\"},\"a\":1}",
    "tested_features": [
      "class",
      "superclass"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;*s=num);a=1"
  },
  {
    "id": "143",
    "input": "*class(*id=a;*name=alpha;*superclass=num);a=true",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\",\"*superclass\":\"num\"},\"a\":true}",
    "tested_features": [
      "class",
      "superclass"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;*s=num);a=01"
  },
  {
    "id": "144",
    "input": "*class(*id=a;*name=alpha;*superclass=num);a=false",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\",\"*superclass\":\"num\"},\"a\":false}",
    "tested_features": [
      "class",
      "superclass"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;*s=num);a=00"
  },
  {
    "id": "145",
    "input": "*class(*id=a;*name=alpha);a=false",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\"},\"a\":false}",
    "tested_features": [
      "class",
      "superclass"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha);a=00"
  },
  {
    "id": "146",
    "input": "*class(*id=a;*name=alpha;*superclass=arr);a=b",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\",\"*superclass\":\"arr\"},\"a\":\"b\"}",
    "tested_features": [
      "class",
      "superclass"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;*s=arr);a=b"
  },
  {
    "id": "147",
    "input": "*class(*id=a;*name=alpha;*superclass=map);a=b",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\",\"*superclass\":\"map\"},\"a\":\"b\"}",
    "tested_features": [
      "class",
      "superclass"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;*s=map);a=b"
  },
  {
    "id": "148",
    "input": "*class(*id=a;*name=alpha;*superclass=map);a=(c=d)",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\",\"*superclass\":\"map\"},\"a\":{\"c\":\"d\"}}",
    "tested_features": [
      "class",
      "superclass"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;*s=map);a(c=d)"
  },
  {
    "id": "149",
    "input": "*class(*id=a;*name=alpha;*superclass=arr);a=[1;2;3]",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"alpha\",\"*superclass\":\"arr\"},\"a\":[1,2,3]}",
    "tested_features": [
      "class",
      "superclass"
    ],
    "minimised_modl": "*c(*i=a;*n=alpha;*s=arr);a=1:2:3"
  },
  {
    "id": "150",
    "input": "*L=[../grammar/tests/1;../grammar/tests/1];a=1",
    "expected_output": "{\"*L\":[\"../grammar/tests/1\",\"../grammar/tests/1\"],\"a\":1}",
    "tested_features": [
      "load"
    ],
    "minimised_modl": "*L=../grammar/tests/1:../grammar/tests/1;a=1"
  },
  {
    "id": "151",
    "input": "*L=../grammar/tests/1:../grammar/tests/1;a=1",
    "expected_output": "{\"*L\":\"../grammar/tests/1:../grammar/tests/1\",\"a\":1}",
    "tested_features": [
      "load"
    ],
    "minimised_modl": "*l=../grammar/tests/1:../grammar/tests/1;a=1"
  },
  {
    "id": "152",
    "input": "ref=123;\nkey=%ref%%",
    "expected_output": "{\"ref\":123,\"key\":\"%ref%%\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "ref=123;key=%ref%%"
  },
  {
    "id": "153",
    "input": "a = %`example`.u%.nonsense.s",
    "expected_output": "{\"a\":\"%`example`.u%.nonsense.s\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "a = %`example`.u%.nonsense.s"
  },
  {
    "id": "154",
    "input": "vat=20;\ns=VAT at %vat% added",
    "expected_output": "{\"vat\":20,\"s\":\"VAT at %vat% added\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "vat=20;s=VAT at %vat% added"
  },
  {
    "id": "155",
    "input": "vat=20;\ns=VAT at %vat%% added",
    "expected_output": "{\"vat\":20,\"s\":\"VAT at %vat%% added\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "vat=20;s=VAT at %vat%% added"
  },
  {
    "id": "156",
    "input": "x=`ignored method`.p",
    "expected_output": "{\"x\":\"`ignored method`.p\"}",
    "tested_features": [
      "method"
    ],
    "minimised_modl": "x=`ignored method`.p"
  },
  {
    "id": "157",
    "input": "_a=one;\n_b=two;\n_c=three;\n\nd=%a:%b:%c;\ne=[%a;%b;%c]",
    "expected_output": "{\"_a\":\"one\",\"_b\":\"two\",\"_c\":\"three\",\"d\":\"%a:%b:%c\",\"e\":[\"%a\",\"%b\",\"%c\"]}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_a=one;_b=two;_c=three;d=%a:%b:%c;e=%a:%b:%c"
  },
  {
    "id": "158",
    "input": "_x=abc;\ny=`%x`",
    "expected_output": "{\"_x\":\"abc\",\"y\":\"%x\"}",
    "tested_features": [
      "graves"
    ],
    "minimised_modl": "_x=abc;y=%x"
  },
  {
    "id": "159",
    "input": "_x=abc;\ny=\"%x\"",
    "expected_output": "{\"_x\":\"abc\",\"y\":\"%x\"}",
    "tested_features": [
      "quotes"
    ],
    "minimised_modl": "_x=abc;y=%x"
  },
  {
    "id": "160",
    "input": "_replace_me=new value;\n\none=%replace_me.u;\n\ntwo=`replace_me`.u;\n\nthree=`replace_me.u`;\n\nfour=`%replace_me.u`;\n\nfive=`%replace_me`.u;\n\nsix=%replace_me.u%_added;\n\nseven=replace_me.u;\n\neight=%`replace_me`.u;\n\nnine=%`replace_me`.u%;",
    "expected_output": "{\"_replace_me\":\"new value\",\"one\":\"%replace_me.u\",\"two\":\"`replace_me`.u\",\"three\":\"replace_me.u\",\"four\":\"%replace_me.u\",\"five\":\"`%replace_me`.u\",\"six\":\"%replace_me.u%_added\",\"seven\":\"replace_me.u\",\"eight\":\"%`replace_me`.u\",\"nine\":\"%`replace_me`.u%\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_replace_me=new value;one=%replace_me.u;two=`replace_me`.u;three=replace_me.u;four=%replace_me.u;five=`%replace_me`.u;six=%replace_me.u%_added;seven=replace_me.u;eight=%`replace_me`.u;nine=%`replace_me`.u%"
  },
  {
    "id": "161",
    "input": "key=value",
    "expected_output": "{\"key\":\"value\"}",
    "tested_features": [
      "pair"
    ],
    "minimised_modl": "key=value"
  },
  {
    "id": "162",
    "input": "key=\"value\"",
    "expected_output": "{\"key\":\"value\"}",
    "tested_features": [
      "quotes"
    ],
    "minimised_modl": "key=value"
  },
  {
    "id": "163",
    "input": "key=`value`",
    "expected_output": "{\"key\":\"value\"}",
    "tested_features": [
      "graves"
    ],
    "minimised_modl": "key=value"
  },
  {
    "id": "164",
    "input": "_test=abc;\nkey=%test",
    "expected_output": "{\"_test\":\"abc\",\"key\":\"%test\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test=abc;key=%test"
  },
  {
    "id": "165",
    "input": "_test=abc;\nkey=\"%test\"",
    "expected_output": "{\"_test\":\"abc\",\"key\":\"%test\"}",
    "tested_features": [
      "object_ref",
      "quotes"
    ],
    "minimised_modl": "_test=abc;key=%test"
  },
  {
    "id": "166",
    "input": "_test=abc;\nkey=`%test`",
    "expected_output": "{\"_test\":\"abc\",\"key\":\"%test\"}",
    "tested_features": [
      "object_ref",
      "graves"
    ],
    "minimised_modl": "_test=abc;key=%test"
  },
  {
    "id": "167",
    "input": "key=\"this is a `%test`\"",
    "expected_output": "{\"key\":\"this is a `%test`\"}",
    "tested_features": [
      "quotes",
      "graves"
    ],
    "minimised_modl": "key=this is a `%test`"
  },
  {
    "id": "168",
    "input": "key=\"string including ` a single grave\"",
    "expected_output": "{\"key\":\"string including ` a single grave\"}",
    "tested_features": [
      "quotes",
      "graves"
    ],
    "minimised_modl": "key=string including ` a single grave"
  },
  {
    "id": "169",
    "input": "key=\"string including some `graved text` here\"",
    "expected_output": "{\"key\":\"string including some `graved text` here\"}",
    "tested_features": [
      "quotes",
      "graves"
    ],
    "minimised_modl": "key=string including some `graved text` here"
  },
  {
    "id": "170",
    "input": "key=`string including \" a quote`",
    "expected_output": "{\"key\":\"string including \\\" a quote\"}",
    "tested_features": [
      "quotes",
      "graves"
    ],
    "minimised_modl": "key=`string including \" a quote`"
  },
  {
    "id": "171",
    "input": "key=`a string including a quote from Winston: \"We'll fight them on the beaches\"`",
    "expected_output": "{\"key\":\"a string including a quote from Winston: \\\"We'll fight them on the beaches\\\"\"}",
    "tested_features": [
      "quotes",
      "graves"
    ],
    "minimised_modl": "key=`a string including a quote from Winston: \"We'll fight them on the beaches\"`"
  },
  {
    "id": "172",
    "input": "key=lots of `graved` text is in `this` value",
    "expected_output": "{\"key\":\"lots of `graved` text is in `this` value\"}",
    "tested_features": [
      "quotes",
      "graves"
    ],
    "minimised_modl": "key=lots of `graved` text is in `this` value"
  },
  {
    "id": "173",
    "input": "key=`this `could` be `a` controversial `test` because `the` grammar `splits` this `string` in `a` different `way``",
    "expected_output": "{\"key\":\"this `could` be `a` controversial `test` because `the` grammar `splits` this `string` in `a` different `way`\"}",
    "tested_features": [
      "quotes",
      "graves"
    ],
    "minimised_modl": "key=this `could` be `a` controversial `test` because `the` grammar `splits` this `string` in `a` different `way`"
  },
  {
    "id": "174",
    "input": "_test=abc;\nkey=%test.u",
    "expected_output": "{\"_test\":\"abc\",\"key\":\"%test.u\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_test=abc;key=%test.u"
  },
  {
    "id": "175",
    "input": "_test=replace the word this in this string;\ntesting=%test.replace<`this`,`that`>",
    "expected_output": "{\"_test\":\"replace the word this in this string\",\"testing\":\"%test.replace<`this`,`that`>\"}",
    "tested_features": [
      "method",
      "object_ref",
      "graves"
    ],
    "minimised_modl": "_test=replace the word this in this string;testing=%test.replace<`this`,`that`>"
  },
  {
    "id": "176",
    "input": "_test=replace the word this in this string;\ntesting=%test.replace<this,``>",
    "expected_output": "{\"_test\":\"replace the word this in this string\",\"testing\":\"%test.replace<this,``>\"}",
    "tested_features": [
      "method",
      "object_ref",
      "graves"
    ],
    "minimised_modl": "_test=replace the word this in this string;testing=%test.replace<this,``>"
  },
  {
    "id": "177",
    "input": "key=%`this`.replace<is,at>",
    "expected_output": "{\"key\":\"%`this`.replace<is,at>\"}",
    "tested_features": [
      "method",
      "object_ref",
      "graves"
    ],
    "minimised_modl": "key=%`this`.replace<is,at>"
  },
  {
    "id": "178",
    "input": "key=`this \"is\" a \"string\" with \"lots\" of \"quoted\" strings`",
    "expected_output": "{\"key\":\"this \\\"is\\\" a \\\"string\\\" with \\\"lots\\\" of \\\"quoted\\\" strings\"}",
    "tested_features": [
      "graves",
      "quotes"
    ],
    "minimised_modl": "key=`this \"is\" a \"string\" with \"lots\" of \"quoted\" strings`"
  },
  {
    "id": "179",
    "input": "_vat=20;\nkey=vat rate is %vat%%",
    "expected_output": "{\"_vat\":20,\"key\":\"vat rate is %vat%%\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_vat=20;key=vat rate is %vat%%"
  },
  {
    "id": "180",
    "input": "_vat=20;\nkey=vat rate is %vat%",
    "expected_output": "{\"_vat\":20,\"key\":\"vat rate is %vat%\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_vat=20;key=vat rate is %vat%"
  },
  {
    "id": "181",
    "input": "_vat=20;\nkey=vat rate is %vat%%",
    "expected_output": "{\"_vat\":20,\"key\":\"vat rate is %vat%%\"}",
    "tested_features": [
      "object_ref",
      "escape"
    ],
    "minimised_modl": "_vat=20;key=vat rate is %vat%%"
  },
  {
    "id": "182",
    "input": "_vat=20;\nkey=vat rate is %vat %",
    "expected_output": "{\"_vat\":20,\"key\":\"vat rate is %vat %\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_vat=20;key=vat rate is %vat %"
  },
  {
    "id": "183",
    "input": "_vat=20;\nkey=`vat rate is %vat%%`",
    "expected_output": "{\"_vat\":20,\"key\":\"vat rate is %vat%%\"}",
    "tested_features": [
      "object_ref",
      "graves"
    ],
    "minimised_modl": "_vat=20;key=vat rate is %vat%%"
  },
  {
    "id": "184",
    "input": "_vat=20;\nkey=\"vat rate is %vat%%\"",
    "expected_output": "{\"_vat\":20,\"key\":\"vat rate is %vat%%\"}",
    "tested_features": [
      "object_ref",
      "quotes"
    ],
    "minimised_modl": "_vat=20;key=vat rate is %vat%%"
  },
  {
    "id": "185",
    "input": "_vat=20;\nkey=\"vat rate is %vat%`%`\"",
    "expected_output": "{\"_vat\":20,\"key\":\"vat rate is %vat%`%`\"}",
    "tested_features": [
      "object_ref",
      "graves"
    ],
    "minimised_modl": "_vat=20;key=vat rate is %vat%`%`"
  },
  {
    "id": "186",
    "input": "_vat=20;\nkey=\"vat rate is %vat`%`\"",
    "expected_output": "{\"_vat\":20,\"key\":\"vat rate is %vat`%`\"}",
    "tested_features": [
      "object_ref",
      "graves"
    ],
    "minimised_modl": "_vat=20;key=vat rate is %vat`%`"
  },
  {
    "id": "187",
    "input": "_test1=e1afmkfd;\nrussian1=%test1.p;\n\n_test2=\"e1afmkfd\";\nrussian2=%test2.p;\n\n_test3=`e1afmkfd`;\nrussian3=%test3.p;",
    "expected_output": "{\"_test1\":\"e1afmkfd\",\"russian1\":\"%test1.p\",\"_test2\":\"e1afmkfd\",\"russian2\":\"%test2.p\",\"_test3\":\"e1afmkfd\",\"russian3\":\"%test3.p\"}",
    "tested_features": [
      "punycode",
      "method"
    ],
    "minimised_modl": "_test1=e1afmkfd;russian1=%test1.p;_test2=e1afmkfd;russian2=%test2.p;_test3=e1afmkfd;russian3=%test3.p"
  },
  {
    "id": "188",
    "input": "_letters=abc;key=\"~%letters\"",
    "expected_output": "{\"_letters\":\"abc\",\"key\":\"~%letters\"}",
    "tested_features": [
      "escape"
    ],
    "minimised_modl": "_letters=abc;key=`~%letters`"
  },
  {
    "id": "189",
    "input": "_letters=abc;key=\"\\%letters\"",
    "expected_output": "{\"_letters\":\"abc\",\"key\":\"\\\\%letters\"}",
    "tested_features": [
      "escape"
    ],
    "minimised_modl": "_letters=abc;key=`\\%letters`"
  },
  {
    "id": "190",
    "input": "We\\u2019re=We\\u2019re;You~u2019re=We~u2019re",
    "expected_output": "{\"We’re\":\"We’re\",\"You’re\":\"We’re\"}",
    "tested_features": [
      "unicode"
    ],
    "minimised_modl": "We\\u2019re=We\\u2019re;You~u2019re=We~u2019re"
  },
  {
    "id": "191",
    "input": "*class(\n  *id=numbers;\n  *assign=[[one;two;three]]\n);\n*class(\n  *id=letters;\n  *assign=[[a;b;c]]\n);\n*class(\n  *id=myArray;\n  *assign=[[letters;numbers]]\n);\nmyArray=[[a;b;c];[1;2;3]]",
    "expected_output": "{\"*class\":{\"*id\":\"myArray\",\"*assign\":[[\"letters\",\"numbers\"]]},\"myArray\":[[\"a\",\"b\",\"c\"],[1,2,3]]}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=numbers;*a[[one;two;three]]);*c(*i=letters;*a[[a;b;c]]);*c(*i=myArray;*a[[letters;numbers]]);myArray=[a;b;c]:[1;2;3]"
  },
  {
    "id": "192",
    "input": "test=\\~u2019",
    "expected_output": "{\"test\":\"~u2019\"}",
    "tested_features": [
      "unicode",
      "escape"
    ],
    "minimised_modl": "test=\\~u2019"
  },
  {
    "id": "193",
    "input": "test=\\\\u2019",
    "expected_output": "{\"test\":\"\\\\u2019\"}",
    "tested_features": [
      "unicode",
      "escape"
    ],
    "minimised_modl": "test=\\\\u2019"
  },
  {
    "id": "194",
    "input": "test=\\~u2019\\\\u2019~u2019\\\\u2019",
    "expected_output": "{\"test\":\"~u2019\\\\u2019’\\\\u2019\"}",
    "tested_features": [
      "unicode",
      "escape"
    ],
    "minimised_modl": "test=\\\\~u2019\\\\u2019~u2019\\\\u2019"
  },
  {
    "id": "195",
    "input": "test=~~u2019",
    "expected_output": "{\"test\":\"~u2019\"}",
    "tested_features": [
      "unicode",
      "escape"
    ],
    "minimised_modl": "test=~~u2019"
  },
  {
    "id": "196",
    "input": "test=\\~u2019",
    "expected_output": "{\"test\":\"~u2019\"}",
    "tested_features": [
      "unicode",
      "escape"
    ],
    "minimised_modl": "test=\\~u2019"
  },
  {
    "id": "197",
    "input": "*class(\n  *id=v;\n  *name=variants;\n  *assign=[[variant*]]\n);\n\n*class(\n  *id=variant;\n  *assign=[[key1;key2;key3]]\n);\n\nv[[one;two;three];[four;five;six]]",
    "expected_output": "{\"*class\":{\"*id\":\"variant\",\"*assign\":[[\"key1\",\"key2\",\"key3\"]]},\"v\":[[\"one\",\"two\",\"three\"],[\"four\",\"five\",\"six\"]]}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=v;*n=variants;*a[[variant*]]);*c(*i=variant;*a[[key1;key2;key3]]);v=[one;two;three]:[four;five;six]"
  },
  {
    "id": "198",
    "input": "*class(\n  *id=v;\n  *name=variants;\n  *assign=[[variant*]]\n);\n\n*class(\n  *id=variant;\n  *assign=[[key1;key2;key3]]\n);\n\nv[one:two:three]",
    "expected_output": "{\"*class\":{\"*id\":\"variant\",\"*assign\":[[\"key1\",\"key2\",\"key3\"]]},\"v\":[\"one:two:three\"]}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*c(*i=v;*n=variants;*a[[variant*]]);*c(*i=variant;*a[[key1;key2;key3]]);v[[one;two;three]]"
  },
  {
    "id": "199",
    "input": "*load=\"http://modules.numprotocol.com/3/rcf.txt!\";@n=1;?=tesco.com;i[(t=icon;v[%U.l%%0%.png:%M.p%:300:300])]",
    "expected_output": "{\"*load\":\"http://modules.numprotocol.com/3/rcf.txt!\",\"@n\":1,\"?\":\"tesco.com\",\"i\":[{\"t\":\"icon\",\"v\":[\"%U.l%%0%.png:%M.p%:300:300\"]}]}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "*l=`http://modules.numprotocol.com/3/rcf.txt!`;@n=1;?=tesco.com;i[(t=icon;v[[%U.l%%0%.png;%M.p%;300;300]])]"
  },
  {
    "id": "200",
    "input": "_u=[\"https://www.logos.uk/\"];\nl=%u.0%logo.png",
    "expected_output": "{\"_u\":[\"https://www.logos.uk/\"],\"l\":\"%u.0%logo.png\"}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_u[https~://www.logos.uk/];l=%u.0%logo.png"
  },
  {
    "id": "201",
    "input": "_C=gb;_L=en;*load=\"http://modules.numprotocol.com/1/rcf.txt!\";o(c[fb=abc;tw=abc])",
    "expected_output": "{\"_C\":\"gb\",\"_L\":\"en\",\"*load\":\"http://modules.numprotocol.com/1/rcf.txt!\",\"o\":{\"c\":[{\"fb\":\"abc\"},{\"tw\":\"abc\"}]}}",
    "tested_features": [
      "object_ref"
    ],
    "minimised_modl": "_C=gb;_L=en;*l=`http://modules.numprotocol.com/1/rcf.txt!`;o(c[fb=abc;tw=abc])"
  },
  {
    "id": "202",
    "input": "test=~u1f60000",
    "expected_output": "{\"test\":\"😀00\"}",
    "tested_features": [
      "unicode",
      "escape"
    ],
    "minimised_modl": "test=~u1f60000"
  },
  {
    "id": "203",
    "input": "@a=b",
    "expected_output": "{\"@a\":\"b\"}",
    "tested_features": [
      "@keys"
    ],
    "minimised_modl": "@a=b"
  },
  {
    "id": "204",
    "input": "*class(\n  *id=custodian;\n  *assign=[\n    [type;hash;permissions]\n  ]\n);\n\n*class(\n  *id=c;\n  *name=custodians;\n  *assign=[[custodian*]]\n);\n\n_a=[thePermission];\n\n@n=1;c=[[theType;theHash;%a]]",
    "expected_output": "{\"*class\":{\"*id\":\"c\",\"*name\":\"custodians\",\"*assign\":[[\"custodian*\"]]},\"_a\":[\"thePermission\"],\"@n\":1,\"c\":[[\"theType\",\"theHash\",\"%a\"]]}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*class(*id=custodian;*assign=[[type;hash;permissions]]);*class(*id=c;*name=custodians;*assign=[[custodian*]]);_a=[thePermission];@n=1;c=[[theType;theHash;%a]]"
  },
  {
    "id": "205",
    "input": "*class(\n  *id=custodian;\n  *assign=[\n    [type;hash;permissions]\n  ]\n);\n\n*class(\n  *id=c;\n  *name=custodians;\n  *assign=[[custodian*]]\n);\n\n_a=thePermission;\n\n@n=1;c=[[theType;theHash;[%a]]]",
    "expected_output": "{\"*class\":{\"*id\":\"c\",\"*name\":\"custodians\",\"*assign\":[[\"custodian*\"]]},\"_a\":\"thePermission\",\"@n\":1,\"c\":[[\"theType\",\"theHash\",[\"%a\"]]]}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*class(*id=custodian;*assign=[[type;hash;permissions]]);*class(*id=c;*name=custodians;*assign=[[custodian*]]);_a=thePermission;@n=1;c=[[theType;theHash;[%a]]]"
  },
  {
    "id": "206",
    "input": "*class(\n  *id=custodian;\n  *assign=[\n    [type;hash;permissions]\n  ]\n);\n\n*class(\n  *id=c;\n  *name=custodians;\n  *assign=[[custodian*]]\n);\n\n_a=(x=thePermission;y=[1;2;3]);\n\n@n=1;c=[[theType;theHash;[%a]]]",
    "expected_output": "{\"*class\":{\"*id\":\"c\",\"*name\":\"custodians\",\"*assign\":[[\"custodian*\"]]},\"_a\":{\"x\":\"thePermission\",\"y\":[1,2,3]},\"@n\":1,\"c\":[[\"theType\",\"theHash\",[\"%a\"]]]}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*class(*id=custodian;*assign=[[type;hash;permissions]]);*class(*id=c;*name=custodians;*assign=[[custodian*]]);_a=(x=thePermission;y=[1;2;3]);@n=1;c=[[theType;theHash;[%a]]]"
  },
  {
    "id": "207",
    "input": "*class(\n  *id=custodian;\n  *assign=[\n    [type;hash;permissions]\n  ]\n);\n\n*class(\n  *id=c;\n  *name=custodians;\n  *assign=[[custodian*]]\n);\n\n_a=admin;\n_b=bravo;\n_c=charlie;\n\n@n=1;c[single:cd89f92fe06f518536c86ff6e8eb85c2717bae35:[%a;%b;%c]]",
    "expected_output": "{\"*class\":{\"*id\":\"c\",\"*name\":\"custodians\",\"*assign\":[[\"custodian*\"]]},\"_a\":\"admin\",\"_b\":\"bravo\",\"_c\":\"charlie\",\"@n\":1,\"c\":[{\"single:cd89f92fe06f518536c86ff6e8eb85c2717bae35:\":[\"%a\",\"%b\",\"%c\"]}]}",
    "tested_features": [
      "class"
    ],
    "minimised_modl": "*class(*id=custodian;*assign=[[type;hash;permissions]]);*class(*id=c;*name=custodians;*assign=[[custodian*]]);_a=admin;_b=bravo;_c=charlie;@n=1;c[single:cd89f92fe06f518536c86ff6e8eb85c2717bae35:[%a;%b;%c]]"
  },
  {
    "id": "208",
    "input": "_here = 1;test=%`%missing`;test2=%`%here`",
    "expected_output": "{\"_here\":1,\"test\":\"%`%missing`\",\"test2\":\"%`%here`\"}",
    "tested_features": [
      "refs"
    ],
    "minimised_modl": "_here = 1;test=%`%missing`;test2=%`%here`"
  },
  {
    "id": "209",
    "input": "test=Hello %missing",
    "expected_output": "{\"test\":\"Hello %missing\"}",
    "tested_features": [
      "refs"
    ],
    "minimised_modl": "test=Hello %missing"
  },
  {
    "id": "210",
    "input": "?=a:b:c:d;test=%`%0`",
    "expected_output": "{\"?\":\"a:b:c:d\",\"test\":\"%`%0`\"}",
    "tested_features": [
      "refs"
    ],
    "minimised_modl": "?=a:b:c:d;test=%`%0`"
  },
  {
    "id": "211",
    "input": "?=a:b:c:d;test=%`0%`",
    "expected_output": "{\"?\":\"a:b:c:d\",\"test\":\"%`0%`\"}",
    "tested_features": [
      "refs"
    ],
    "minimised_modl": "?=a:b:c:d;test=%`0%`"
  },
  {
    "id": "212",
    "input": "?=a:b:c:d;_x=xxx;test=%`%0 %x x%`",
    "expected_output": "{\"?\":\"a:b:c:d\",\"_x\":\"xxx\",\"test\":\"%`%0 %x x%`\"}",
    "tested_features": [
      "refs"
    ],
    "minimised_modl": "?=a:b:c:d;_x=xxx;test=%`%0 %x x%`"
  },
  {
    "id": "213",
    "input": "_locale=uk;url=`https://www.example.com/%locale/file`;",
    "expected_output": "{\"_locale\":\"uk\",\"url\":\"https://www.example.com/%locale/file\"}",
    "tested_features": [
      "refs"
    ],
    "minimised_modl": "_locale=uk;url=`https://www.example.com/%locale/file`;"
  },
  {
    "id": "214",
    "input": "name=%`%-et3caab`.p",
    "expected_output": "{\"name\":\"%`%-et3caab`.p\"}",
    "tested_features": [
      "refs"
    ],
    "minimised_modl": "name=%`%-et3caab`.p"
  },
  {
    "id": "215",
    "input": "_a=1;\n_b(\n   _a=2;\n   _c(\n       _a=3\n   )\n);\n\nx=%a;\ny = %b.a;\nz = %b.c.a",
    "expected_output": "{\"_a\":1,\"_b\":{\"_a\":2,\"_c\":{\"_a\":3}},\"x\":\"%a\",\"y\":\"%b.a\",\"z\":\"%b.c.a\"}",
    "tested_features": [
      "refs"
    ],
    "minimised_modl": "_a=1;_b(_a=2;_c(_a=3));x=%a;y = %b.a;z = %b.c.a"
  },
  {
    "id": "216",
    "input": "()",
    "expected_output": "null",
    "tested_features": [],
    "minimised_modl": "()"
  },
  {
    "id": "217",
    "input": "[]",
    "expected_output": "[]",
    "tested_features": [],
    "minimised_modl": "[]"
  },
  {
    "id": "218",
    "input": "x=%z;\ny=%x;\nz=%y",
    "expected_output": "{\"x\":\"%z\",\"y\":\"%x\",\"z\":\"%y\"}",
    "tested_features": [],
    "minimised_modl": "x=%z;y=%x;z=%y"
  },
  {
    "id": "219",
    "input": "*class(\n  *id=h;\n  *name=hours;\n  *assign=[\n    [time_zone_city;available]\n  ]\n);\n\nperson(h=AD:[d@0-0])",
    "expected_output": "{\"*class\":{\"*id\":\"h\",\"*name\":\"hours\",\"*assign\":[[\"time_zone_city\",\"available\"]]},\"person\":{\"h\":{\"AD:\":[\"d@0-0\"]}}}",
    "tested_features": [],
    "minimised_modl": "*class(*id=h;*name=hours;*assign=[[time_zone_city;available]]);person(h=AD:[d@0-0])"
  },
  {
    "id": "220",
    "input": "_vars(\n  test=1\n);\nprint_var = %vars.test,",
    "expected_output": "{\"_vars\":{\"test\":1},\"print_var\":\"%vars.test,\"}",
    "tested_features": [],
    "minimised_modl": "_vars(test=1);print_var=%vars.test,"
  },
  {
    "id": "221",
    "input": "_vars(\n  test=hello world\n);\nprint_var = %vars.test.r< ,``>,",
    "expected_output": "{\"_vars\":{\"test\":\"hello world\"},\"print_var\":\"%vars.test.r< ,``>,\"}",
    "tested_features": [],
    "minimised_modl": "_vars(test=hello world);print_var=%vars.test.r< ,``>,"
  },
  {
    "id": "222",
    "input": "_var=true;print_var=%var test",
    "expected_output": "{\"_var\":true,\"print_var\":\"%var test\"}",
    "tested_features": [],
    "minimised_modl": "_var=true;print_var=%var test"
  },
  {
    "id": "223",
    "input": "_var=false;print_var=%var test",
    "expected_output": "{\"_var\":false,\"print_var\":\"%var test\"}",
    "tested_features": [],
    "minimised_modl": "_var=false;print_var=%var test"
  },
  {
    "id": "224",
    "input": "_var=null;print_var=%var test",
    "expected_output": "{\"_var\":null,\"print_var\":\"%var test\"}",
    "tested_features": [],
    "minimised_modl": "_var=null;print_var=%var test"
  },
  {
    "id": "225",
    "input": "*class(\n  *id=v;\n  *name=value;\n  *superclass=str\n);\n*class(\n  *id=vs;\n  *name=values;\n  *assign=[[v*]];\n  *superclass=arr\n);\n*class(\n  *id=contact;\n  *name=contact;\n  *superclass=map\n);\n*class(\n  *id=method;\n  *name=method;\n  object_display_name=Contact Method;\n  *superclass=contact;\n  *assign=[\n    [v];\n    [d;v];\n    [d;v;h]\n  ]\n);\n*class(\n  *id=a;\n  *name=address;\n  *superclass=method;\n  *assign=[\n    [vs];\n    [d;vs];\n    [d;vs;h]\n  ];\n  object_type=method;\n  object_display_name=%locale.a.name;\n  description_default=%locale.a.default;\n  prefix=\"\";\n  method_type=core\n);\na=[address desc;[123;my address;true]];\nmethod=[method description;method value]",
    "expected_output": "{\"*class\":{\"*id\":\"a\",\"*name\":\"address\",\"*superclass\":\"method\",\"*assign\":[[\"vs\"],[\"d\",\"vs\"],[\"d\",\"vs\",\"h\"]],\"object_type\":\"method\",\"object_display_name\":\"%locale.a.name\",\"description_default\":\"%locale.a.default\",\"prefix\":\"\",\"method_type\":\"core\"},\"a\":[\"address desc\",[123,\"my address\",true]],\"method\":[\"method description\",\"method value\"]}",
    "tested_features": [],
    "minimised_modl": "*class(*id=v;*name=value;*superclass=str);*class(*id=vs;*name=values;*assign=[[v*]];*superclass=arr);*class(*id=contact;*name=contact;*superclass=map);*class(*id=method;*name=method;object_display_name=Contact Method;*superclass=contact;*assign=[[v];[d;v];[d;v;h]]);*class(*id=a;*name=address;*superclass=method;*assign=[[vs];[d;vs];[d;vs;h]];object_type=method;object_display_name=%locale.a.name;description_default=%locale.a.default;prefix=\"\";method_type=core);a=[address desc;[123;my address;true]];method=[method description;method value]"
  },
  {
    "id": "226",
    "input": "x=\"~n\"",
    "expected_output": "{\"x\":\"\\n\"}",
    "tested_features": [],
    "minimised_modl": ""
  },
  {
    "id": "227",
    "input": "x=\"~t\"",
    "expected_output": "{\"x\":\"\\t\"}",
    "tested_features": [],
    "minimised_modl": ""
  },
  {
    "id": "228",
    "input": "x=\"~~n\"",
    "expected_output": "{\"x\":\"~n\"}",
    "tested_features": [],
    "minimised_modl": ""
  },
  {
    "id": "229",
    "input": "x=\"~\\n\"",
    "expected_output": "{\"x\":\"\\\\n\"}",
    "tested_features": [],
    "minimised_modl": ""
  },
  {
    "id": "230",
    "input": "x=\"\\\\n\"",
    "expected_output": "{\"x\":\"\\\\n\"}",
    "tested_features": [],
    "minimised_modl": ""
  },
  {
    "id": "231",
    "input": "x=\"\\~n\"",
    "expected_output": "{\"x\":\"~n\"}",
    "tested_features": [],
    "minimised_modl": ""
  }
]