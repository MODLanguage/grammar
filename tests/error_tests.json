[
  "*VERSION=100;\"123\"=1",
  "b=(c=(d=(e=(f=(g=(h=(i=(j=1))))))));a=%b.c.e.f.g.h.i.j",
  "*method(*id=hy;*name=hyp1;*transform=`replace( ,-)`);*method(*id=hy;*name=hyp2;*transform=`replace( ,-)`)",
  "*method(*id=hy;*name=hyp1;*transform=`replace( ,-)`);*method(*id=hy1;*name=hyp1;*transform=`replace( ,-)`)",
  "*method(*id=hy;*name=hyp;*transform=`replace( ,-)`);*method(*id=hyp1;*name=hy;*transform=`replace( ,-)`)",
  "*method(*id=hy;*name=hyp;*transform=`replace( ,-)`);*method(*id=hyp;*name=hyp1;*transform=`replace( ,-)`)",
  "*class(*id=t;*name=test;*assign=[[a;b];[a]])",
  "*class(*id=t;*name=test;*assign=[[a;b]]);test=1:2:3",
  "*class(*id=t;*name=test);*class(*id=tt;*name=test)",
  "*class(*id=test;*name=t);*class(*id=tt;*name=test)",
  "*class(*id=test;*name=t);*class(*id=test;*name=tt)",
  "*class(*name=test;*id=t);*class(*id=test;*name=tt)",
  "*L=grammar_tests/1;*l=grammar_tests/1;a=1",
  "*L=grammar_tests/1;*L=grammar_tests/1",
  "*class(\n *id=g;\n *name=glossary;\n *superclass=map\n);\n*class(\n *id=t;\n *name=title;\n *superclass=str\n);\n*class(\n *id=d;\n *name=GlossDiv;\n *superclass=map\n);\n*class(\n *id=l;\n *name=GlossList;\n *superclass=map\n);\n*class(\n *id=e;\n *name=GlossEntry;\n *superclass=map;\n *assign[\n   [i;s;gt;a;ab;gd;gs]\n ]\n);\n*class(\n *id=i;\n *name=ID;\n *superclass=str\n);\n*class(\n *id=s;\n *name=SortAs;\n *superclass=str\n);\n*class(\n *id=gt;\n *name=GlossTerm;\n *superclass=str\n);\n*class(\n *id=a;\n *name=Acronym;\n *superclass=str\n);\n*class(\n *id=ab;\n *name=Abbrev;\n *superclass=str\n);\n*class(\n *id=gd;\n *name=GlossDef;\n *superclass=map;\n *assign=[\n   [p];\n   [p;sa]\n ]\n);\n*CLASS(\n *id=p;\n *name=para;\n *superclass=str\n);\n*class(\n *id=sa;\n *name=SeeAlso;\n *superclass=arr\n);\n*class(\n *id=gs;\n *name=GlossSee;\n *superclass=str\n);\n\ng(\n ?=[SGML;markup;language];\n t=example glossary;\n d(\n   t=S;\n   l(\n     e(\n       i=%0;\n       s=%0;\n       gt=Standard Generalized %1.s %2.s;\n       a=%0;\n       ab=ISO 8879\\:1986;\n       gd=A meta-%1 %2, used to create %1 %2s such as DocBook.\n         :[GML;XML];\n       gs=%1\n     )\n   )\n )\n)",
  "*class(*id=n;*name=name;*superclass=num);n=Elliott",
  "*class(*id=newstr;*superclass=str);*class(*id=a;*name=age;*superclass=anotherstr);a=10",
  "!a=1",
  "a!=1",
  "!a!=1",
  "!~a~!=1",
  "Â£x=y",
  "$x=y",
  "@x=y",
  "-x=y",
  "+x=y",
  "'x'=y",
  "'x?=y",
  "a=1:2:3;;\nb=4:5:6",
  "a=1:2:3;\n;\nb=4:5:6",
  "a=1:2:3\n;\n;\nb=4:5:6",
  "a=1:2:3\n;;\nb=4:5:6",
  "a=1:2:3\n;\nb=4:5:6\n;\n;\n",
  "a=1:2:3\n;\nb=4:5:6\n;;\n",
  "*nonsense=1",
  "?=1:2:3:4;_12%3=1",
  "_123=1",
  "_12*3=1",
  "_12!3=1",
  "_12@3=1",
  "_12#3=1",
  "_12$3=1",
  "_12^3=1",
  "_12&3=1",
  "_12(3=1",
  "_12)3=1",
  "123=456",
  "_test=(\n  first=(\"v1\"=(one=(two=three)))\n);\n \ntesting = \"`%test.first.v1.one.0`\"",
  "_test=(\n  first=(\"v1\"=(one=(two=three)))\n);\n \ntesting = \"`%test.first.v1.0.two`\"",
  "_test=(\n  first=(\"v1\"=(one=(two=three)))\n);\n \ntesting = \"`%test.first.v1.0.0`\"",
  "_test=(\n  numbers=(\"one\"=1)\n);\n\ntesting = this is a string that includes a reference with a letter s after it %test.numbers.ones",
  "true=test",
  "false=test",
  "null=test",
  "*class(*id=arr)",
  "*class(*id=num)",
  "*class(*id=map)",
  "*class(*id=str)",
  "*class(*name=arr)",
  "*class(*name=num)",
  "*class(*name=map)",
  "*class(*name=str)",
  "IMMUTABLE=true;IMMUTABLE=false",
  "*VERSION=test",
  "*V=test",
  "*VERSION=0",
  "*VERSION=0.1",
  "a=b;*VERSION=1",
  "*class(*id=a;*name=alpha;*superclass=str);a=null",
  "*class(*id=a;*name=alpha;*superclass=num);a=null",
  "*class(*id=a;*name=alpha;*superclass=num);a=x",
  "*class(*id=a;*name=alpha;*superclass=num);a=null",
  "*class(*id=a;*name=alpha;*superclass=map);a=[1;2;3]",
  "*class(*id=a;*name=alpha;*superclass=arr);a=(c=d)",
  "*L=grammar_tests/test_import_dir/nested_import1.txt;files=%*load"
]