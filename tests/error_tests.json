[
  "?=[[a;b]];letters2=%0>0>0",
  "*L=grammar_tests/1;*l=grammar_tests/1;a=1",
  "*L=grammar_tests/1;*L=grammar_tests/1",
  "*class(\n *id=g\n *name=glossary\n *superclass=map\n)\n*class(\n *id=t\n *name=title\n *superclass=str\n)\n*class(\n *id=d\n *name=GlossDiv\n *superclass=map\n)\n*class(\n *id=l\n *name=GlossList\n *superclass=map\n)\n*class(\n *id=e\n *name=GlossEntry\n *superclass=map\n *assign[\n   [i;s;gt;a;ab;gd;gs]\n ]\n)\n*class(\n *id=i\n *name=ID\n *superclass=str\n)\n*class(\n *id=s\n *name=SortAs\n *superclass=str\n)\n*class(\n *id=gt\n *name=GlossTerm\n *superclass=str\n)\n*class(\n *id=a\n *name=Acronym\n *superclass=str\n)\n*class(\n *id=ab\n *name=Abbrev\n *superclass=str\n)\n*class(\n *id=gd\n *name=GlossDef\n *superclass=map\n *assign=[\n   [p]\n   [p;sa]\n ]\n)\n*CLASS(\n *id=p\n *name=para\n *superclass=str\n)\n*class(\n *id=sa\n *name=SeeAlso\n *superclass=arr\n)\n*class(\n *id=gs\n *name=GlossSee\n *superclass=str\n)\n\ng(\n ?=[SGML;markup;language]\n t=example glossary\n d(\n   t=S\n   l(\n     e(\n       i=%0\n       s=%0\n       gt=Standard Generalized %1.s %2.s\n       a=%0\n       ab=ISO 8879\\:1986\n       gd=A meta-%1 %2, used to create %1 %2s such as DocBook.\n         :[GML;XML]\n       gs=%1\n     )\n   )\n )\n)",
  "*class(*id=n;*name=name;*superclass=num);n=Elliott",
  "*class(*id=newstr*superclass=str);*class(*id=a;*name=age;*superclass=anotherstr);a=10",
  "!a=1",
  "a!=1",
  "!a!=1",
  "!~a~!=1",
  "Â£x=y",
  "$x=y",
  "@x=y",
  "-x=y",
  "+x=y",
  "'x'=y",
  "'x?=y",
  "a=1:2:3;;\nb=4:5:6",
  "a=1:2:3;\n;\nb=4:5:6",
  "a=1:2:3\n;\n;\nb=4:5:6",
  "a=1:2:3\n;;\nb=4:5:6",
  "a=1:2:3\n;\nb=4:5:6\n;\n;\n",
  "a=1:2:3\n;\nb=4:5:6\n;;\n",
  "*nonsense=1",
  "_123=1",
  "_12*3=1",
  "_12%3=1",
  "_12!3=1",
  "_12@3=1",
  "_12#3=1",
  "_12$3=1",
  "_12^3=1",
  "_12&3=1",
  "_12(3=1",
  "_12)3=1",
  "test=(a=b=c=d=f);test=%test>a>b>c>d",
  "123=456",
  "o=1:2::4:5::",
  "o=[1;2;;4;5;;]",
  "o=[1;2;3;4;5;]",
  "o=1:2:3:4:5:",
  "_test=(\n  first=(\"v1\"=(one=(two=three)))\n)\n \ntesting = \"`%test>first>v1>one>0`\"",
  "_test=(\n  first=(\"v1\"=(one=(two=three)))\n)\n \ntesting = \"`%test>first>v1>0>two`\"",
  "_test=(\n  first=(\"v1\"=(one=(two=three)))\n)\n \ntesting = \"`%test>first>v1>0>0`\"",
  "_test=(\n  numbers=(\"one\"=1)\n)\n\ntesting = this is a string that includes a reference with a letter s after it %test>numbers>ones"
]